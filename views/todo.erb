<html>
  <head>
    <%= erb :style %>
    <link rel="stylesheet" href="dist/auto-complete.css"></link>
  </head>
  <body>
    <%= erb :menu, :locals => { :active => :todo, :prefix => prefix } %>
    <form action="todo" method="POST">
      <table>
	      <tr>
          <th>Date</th>
          <th>Cr</th>
          <th>Amt</th>
          <th>Details</th>
          <th>Account</th>
          <th>Receipt</th>
          <th>Comment</th>
	      </tr>
        <% bookings.each do |b| %>
        <tr>
          <td class="date"><%= b[:date] %></td>
          <td class="amount"><%= b[:currency] %></td>
          <td class="amount <%= b[:amount_cents]>0?'positive':'' %>"><%= '%.2f' % (b[:amount_cents]/100.0) %></td>
          <% if b[:details_line_1] %>
          <td class="details">
            <%= b[:details_line_1] %><br><%= b[:details_line_2] %>
            <% if b[:details][0..7]=="(PayPal)" %><a href="https://www.paypal.com/activity/payment/<%= b[:id] %>" target="_blank">üîç</a><% end %>
          </td>
          <% else %>
          <td class="details"><%= b[:details] %></td>
          <% end %>
          <td>
            <label><input placeholder="Account" id="acc-<%= b[:id] %>" type="text" name="booking-<%= b[:id] %>-account" class="account"></label>
          </td>
          <td>
            <label>
              <input id="rcpt-<%= b[:id] %>" type="hidden" name="booking-<%= b[:id] %>-receipts" class="receipts">
              <span id="rcpt-<%= b[:id] %>-previews"></span>
              <input placeholder="New Receipt" id="rcpt-<%= b[:id] %>-new" type="text" name="booking-<%= b[:id] %>-receipt" class="receipt" onblur="makeReceiptList('rcpt-<%= b[:id] %>')">
            </label>
          </td>
          <td>
            <label><input placeholder="Comment" id="comment-<%= b[:id] %>" type="text" name="booking-<%= b[:id] %>-comment" value="<%= default_comment %>" class="comment"></label>
          </td>
        </tr>
        <% end %>
        <tr>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td></td>
          <td><input type="submit" value="Save"></td>
        </tr>
      </table>
    </form>

    <script src="dist/auto-complete.min.js"></script>
    <script>

      function makeReceiptList(id) {
        var listEl = document.getElementById(id)
        var newEl = document.getElementById(id+"-new")
        var list = []
        if (listEl.value.length>0) {
          list = listEl.value.split(",")
        } 
        if (newEl.value.length>0 && newEl.value.indexOf(".pdf")>0) {
          list.push(newEl.value)
          listEl.value = list.join(",")
          newEl.value = ""
        }
        renderPreviewLinks(id)
      }
      
      function renderPreviewLinks(id) {
        var target = document.getElementById(id+"-previews")
        var src = document.getElementById(id)

        if (src.value.length>0) {
          var docs = src.value.split(",")
          var html = "<table>"
          for (var i=0; i<docs.length; i++) {
            html += "<tr><td><a target='_blank' href='pdf/"+docs[i]+"'>"+docs[i]+"</a></td>"
            html += "<td><a class='btn' onclick=\"deleteReceiptLink('"+id+"',"+i+")\">üóë</a></td></tr>"
          }
          html += "</table>"
        } else {
          html = ""
        }
        target.innerHTML = html
      }

      function deleteReceiptLink(id, receiptIdx) {
        console.log(id,receiptIdx)
        var src = document.getElementById(id)
        var docs = src.value.split(",")
        var list = []
        for (var i=0; i<docs.length; i++) {
          if (i!=receiptIdx) list.push(docs[i])
        }
        src.value = list.join(",")
        
        renderPreviewLinks(id)
      }

      var sourceFunc = function(term, suggest) {
        term = term.toLowerCase()
        var choices = <%= accounts.to_json %>
          var matches = []
        for (i=0; i<choices.length; i++) if (~choices[i].toLowerCase().indexOf(term)) matches.push(choices[i])
        suggest(matches)
      }

      var sourceFuncReceipt = function(term, suggest) {
        term = term.toLowerCase()
        var choices = <%= documents.to_json %>
          var matches = []

        if (term.length>0)
          for (i=0; i<choices.length; i++) {
            if ((choices[i].docid && ~(choices[i].docid+"").toLowerCase().indexOf(term))
                || (choices[i].tags && ~(choices[i].tags+"").toLowerCase().indexOf(term))
                || (choices[i].date && ~(choices[i].date+"").toLowerCase().indexOf(term))
                || (choices[i].path && ~(choices[i].path+"").toLowerCase().indexOf(term))
                || (choices[i].sum && ~(choices[i].sum+"").indexOf(term))) {
              matches.push(choices[i])
            }
          }
        suggest(matches)
      }

      var renderFuncReceipt = function (item, search){
        search = search.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')
        var re = new RegExp("(" + search.split(' ').join('|') + ")", "gi")
        // highlight the search expressions
        var date_hl = "", sum_hl = "", docid_hl = "", tags_hl = ""
        if (item.date) date_hl   = item.date.replace(re, "<b>$1</b>")
        if (item.sum) sum_hl     = (item.sum+"").replace(re, "<b>$1</b>")
        if (item.docid) docid_hl = (item.docid+"").replace(re, "<b>$1</b>")
        if (item.tags) tags_hl   = item.tags.replace(re, "<b>$1</b>")
        path_hl = item.path.replace(re, "<b>$1</b>")
        
        var display = "<span class='sm'>"+date_hl+"</span><span class='smr'>"+sum_hl+"</span><br><span class='sm'>"+docid_hl+"</span><br>"+path_hl+"<br>"+tags_hl
        return '<div class="autocomplete-suggestion" data-val="' + item.path + '">' + display + '</div>'
      }

      var els = document.getElementsByClassName("account")
      for (i=0;i<els.length;i++) {
        new autoComplete({
          selector: "#"+els[i].id,
          minChars: 0,
          source: sourceFunc
        })
      }
      var els = document.getElementsByClassName("receipt")
      for (i=0;i<els.length;i++) {
        new autoComplete({
          selector: "#"+els[i].id,
          minChars: 0,
          source: sourceFuncReceipt,
          renderItem: renderFuncReceipt
        })
      }

    </script>
  </body>
</html>
