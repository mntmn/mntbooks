<html>
  <head>
    <%= erb :style %>
  </head>
  <body onload="initAutoFill()">
  <%= erb :menu, :locals => { :active => active, :prefix => prefix } %>
  <style>
    .text {
        font-size: 7.0pt;
        color: #888;
    }

    .doc {
        //border-bottom: 1px solid #888;
    }

    .doc td {
        padding-bottom: 20px;
    }

    .doc img {
        width: 500px;
        border: 1px solid #888;
        border-radius: 2px;
    }

    .sort {
        padding-right: 10px;
    }

    .filter {
        margin-bottom: 20px;
    }

    .metadata, .actions, .state {
        margin-bottom: 20px;
    }

    .metadata {
        margin-bottom: 60px;
    }

    .title {
        font-weight: bold;
    }

    .sort.asc::before {
        content: "▲";
    }
    .sort.desc::before {
        content: "▼";
    }

    .autofill-button {
        text-decoration:underline;
        background-color: #ffff88;
    }
  </style>
  <div id="docs">
    <div class="filter" style="display: none">
      <input class="search" type="search" placeholder="Filter">
      
      <button class="sort" data-sort="title">Sort by title</button>
      <button class="sort" data-sort="created">Sort by created</button>
    </div>

    <div>
      <form method="GET" action="documents">
        <span><%= docs.size %> documents with state</span>
        <select name="state" onchange="this.form.submit()">
          <option value="unfiled" <%= state=="unfiled"?"selected":"" %>>Unfiled</option>
          <option value="defer" <%= state=="defer"?"selected":"" %>>Ready for Booking</option>
          <option value="todo" <%= state=="todo"?"selected":"" %>>TODO</option>
          <option value="archive" <%= state=="archive"?"selected":"" %>>Archived</option>
          <option value="booked" <%= state=="booked"?"selected":"" %>>Booked</option>
          <option value="" <%= state==""?"selected":"" %>>Any</option>
        </select>
      </form>
    </div>

    <!-- list class for list.js -->
    <table class="docs list">
    <% i=1 %>
    <% docs.each do |b| %>
    <tr class="doc" id="doc<%=b[:id] %>">
      <td><a target="_blank" href="<%= prefix %>/pdf/<%= b[:path] %>"><img src="<%= b[:thumbnail] %>"></a></td>
      <td>
        <form method="POST" action="documents?state=<%= state %>#doc<%= b[:id] %>">
          <h3 class="title"><a target="_blank" href="<%= prefix %>/pdf/<%= b[:path] %>"><%= b[:title] %></a></h3>
          <p class="created">Scanned: <%= b[:created].strftime("%Y-%m-%d")  %> 
            <a href="#doc-<%= b[:id] %>" class="autofill-button" onclick="autoFill('<%=b[:id]%>')">Autofill</a>
          </p>
          
          <div class="metadata">
            
            <div class="form-group">
              <label class="form-label">IDs in the document</label>
              
              <input class="form-input" type="text" name="doc-<%= b[:id] %>-docid" id="doc-<%= b[:id] %>-docid" placeholder="XYZ1232-234,foo99,24562341" value="<%= b[:metadata][:docid] %>" pattern="[a-zA-Z\-0-9,]+" required <% if i==1 %>autofocus<% end %>>
            
              <label class="form-label">Main Date (Invoice Date etc.)</label>
              <input type="text" name="doc-<%= b[:id] %>-date" id="doc-<%= b[:id] %>-date" placeholder="YYYY-MM-DD" value="<%= b[:metadata][:date] %>" style="width: 150px;" pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}" required>
              
              <label class="form-label">Biggest Sum</label>
              <input type="text" name="doc-<%= b[:id] %>-sum" id="doc-<%= b[:id] %>-sum" placeholder="12345.99" value="<%= b[:metadata][:sum] %>" style="width: 150px;" pattern="[0-9]+\.[0-9]{2}">

              <label class="form-label">Tags</label>
              <input type="text" name="doc-<%= b[:id] %>-tags" id="doc-<%= b[:id] %>-tags" placeholder="tag,tag,tag" value="<%= b[:metadata][:tags] %>" style="width: 150px;" pattern="[a-z0-9,]+">
            </div>
            
            <div class="form-group state">
              <label class="form-label">State</label>
              <% if b[:state] == "booked" %>
                Booked
              <% else %>
              <select name="doc-<%= b[:id] %>-state" id="doc-<%= b[:id] %>-state">
                <option value="unfiled" <%= b[:state]=="unfiled"?"selected":"" %>>Unfiled</option>
                <option value="defer" <%= b[:state]=="defer"?"selected":"" %>>Ready for Booking</option>
                <option value="todo" <%= b[:state]=="todo"?"selected":"" %>>TODO</option>
                <option value="archive" <%= b[:state]=="archive"?"selected":"" %>>Archived</option>
              </select>
              <% end %>
            </div>
            
            <div class="form-group">
              <input type="submit" name="doc-<%= b[:id] %>-metadata" value="Save">
            </div>
          </div>

          <p class="text" id="doc-<%= b[:id] %>-text"><%= html_escape(b[:text]) %></p>
        </form>
      </td>
    </tr>
    <% end %>
    </table>
    
    <script src="dist/list.min.js"></script>
    <script>
      var options = {
        valueNames: [ 'title', 'created', 'state', 'text' ]
      }
      var docsList = new List('docs', options);
      
      function normalizeDay(d) {
        if ((d+"").length==1) return "0"+d
        if ((d+"").length==2) return d+""
        return "??"
      }
      function normalizeMonth(m) {
        m=(m+"").toLowerCase()
        var mnames = ["jan","feb","mär","apr","mai","jun","jul","aug","sep","okt","nov","dez",
                      "jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"]
        if (m.match(/\w/)) {
          for (var i=0; i<mnames.length; i++) {
            if (m.match(mnames[i])) {
              m=(i%12)+1
              break
            }
          }
        }
        if ((m+"").length==1) return "0"+m
        if ((m+"").length==2) return m+""
        return "??"
      }
      
      function normalizeYear(y) {
        if ((y+"").length==2) return "20"+y
        if ((y+"").length==4) return y+""
        return "????"
      }

      var matchers = [
        {
          name: "amazon business",
          rxMatch: /www\.amazon\.de\/contact/,
          rxId: /Rechnungsnummer ([A-Z0-9\-]+)/,
          rxDate: /Lieferdatum +(\d+) ([^ ]+) (\d+)/,
          dateFmt: [2,1,0],
          rxSum: /Zahlbetrag (\d+,\d+)/,
          tags: "amazon"
        },
        {
          name: "DHL Online Frankierung",
          rxMatch: /DHL Online Frankierung/,
          rxId: /Rechnungs-Nr.: ([A-Z0-9\-]+)/,
          rxDate: /(\d+)\.(\d+)\.(\d+) Rechnungs/,
          dateFmt: [2,1,0],
          rxSum: /Rechnungsbetrag: (\d+,\d+)/,
          tags: "dhl,post,postage"
        },
        {
          name: "DHL Paket",
          rxMatch: /DHL Paket GmbH/,
          rxId: /Gläubiger-ID: ([0-9]+)/,
          rxDate: /Gläubiger-ID: [0-9]+ (\d+)\.(\d+)\.(\d+)/,
          dateFmt: [2,1,0],
          rxSum: /Rechnungsbetrag \(inklusive Umsatzsteuer\) (\d+,\d+)/,
          tags: "dhl,shipping"
        },
        {
          name: "Deutsche Post Paket",
          rxMatch: /Niederlassung BRIEF/,
          rxId: /Rechnungsnummer ([0-9]+)/,
          rxDate: /Rechnungsdatum (\d+)\.(\d+)\.(\d+)/,
          dateFmt: [2,1,0],
          rxSum: /(\d+,\d+) EUR Wir buchen/,
          tags: "dhl,post,shipping"
        },
        {
          name: "Telekom",
          rxMatch: /Telekom Deutschland/,
          rxId: /Rechnungsnummer ([0-9 ]+)/,
          rxDate: /Datum (\d+)\.(\d+)\.(\d+)/,
          dateFmt: [2,1,0],
          rxSum: /Rechnungsbetrag (\d+,\d+)/,
          tags: "telekom,internet,phone"
        },
        {
          name: "GitHub",
          rxMatch: /GitHub\.com/,
          rxId: /Transaction ID ([A-Z0-9]+)/,
          rxDate: /Date (\d+)-(\d+)-(\d+)/,
          dateFmt: [0,1,2],
          rxSum: /Total \$(\d+\.\d+)/,
          tags: "github"
        }
      ]
      
      function autoFill(id) {
        var text = document.getElementById("doc-"+id+"-text").innerText
        text = text.replace("\n"," ")
        text = text.replace("  "," ")

        for (var i=0; i<matchers.length; i++) {
          var mt = matchers[i]
          if (text.match(mt.rxMatch)) {
            console.log("matched: ",mt.name,text)
            var docid='',date='',sum=''
            if ((m=text.match(mt.rxId))) {
              docid=m[1].replace(/ /g,"")
            }
            if ((m=text.match(mt.rxDate))) {
              var fmt = mt.dateFmt
              date = [normalizeYear(m[fmt[0]+1]), normalizeMonth(m[fmt[1]+1]), normalizeDay(m[fmt[2]+1])].join("-")
            }
            if ((m=text.match(mt.rxSum))) {
              if (m[1].match(/\.\d\d$/)) {
                sum = m[1].replace(",","")
              } else if (m[1].match(/\,\d\d$/)) {
                sum = m[1].replace(".","").replace(",",".")
              } else {
                sum = "?.??"
              }
            }

            console.log("match results:", docid,date,sum,mt.tags)
            
            document.getElementById("doc-"+id+"-docid").value = docid
            document.getElementById("doc-"+id+"-date").value = date
            document.getElementById("doc-"+id+"-sum").value = sum
            document.getElementById("doc-"+id+"-tags").value = mt.tags
            document.getElementById("doc-"+id+"-tags").focus()
            document.getElementById("doc-"+id+"-state").value = "defer"
            break
          }
        }
      }

      function initAutoFill() {
        var els = document.getElementsByClassName("text")

        for (var i=0; i<els.length; i++) {
          var text = els[i].innerText

          var matched = false;
          for (var j=0; j<matchers.length; j++) {
            var mt = matchers[j]
            if (text.match(mt.rxMatch)) {
              matched = true;
            }
          }

          if (!matched) {
            var btn = els[i].parentElement.getElementsByClassName("autofill-button")
            if (btn.length) {
              btn[0].remove()
            }
          }
        }
      }
    </script>

    <% if notification %>
    <script>
      new Noty({
          text: "<%= notification %>"
      }).show()
    </script>
    <% end %>
  </body>
</html>
